/*
Generated by EigenEinSum

Recommended filename:
TMP0_g...AOs_g,mu...AOs_g,nu---F0_mu,nu.hpp

Einsum expression:
TMP0(g), AOs(g, mu), AOs(g, nu) -> F0(mu, nu)

The einsum expression is decomposed into:
TMP0(g), AOs(g, mu) -> TMP0AOs(g, mu)
TMP0AOs(g, mu), AOs(g, nu) -> F0(mu, nu)

The index paths are derived to be:
TOP
└── mu
    ├── g
    └── nu
        └── g
*/
{
	[[maybe_unused]] const int mu_len = AOs.dimension(1);
	assert( mu_len == F0.dimension(0) );
	[[maybe_unused]] const int nu_len = AOs.dimension(1);
	assert( nu_len == F0.dimension(1) );
	[[maybe_unused]] const int g_len = TMP0.dimension(0);
	assert( g_len == AOs.dimension(0) );
	assert( g_len == AOs.dimension(0) );
	Eigen::Tensor<double, 1> TMP0AOsmu(g_len);
	for ( int mu = 0; mu < mu_len; mu++ ){
		TMP0AOsmu.setZero();
		for ( int g = 0; g < g_len; g++ ){
			TMP0AOsmu(g) += TMP0(g) * AOs(g, mu);
		}
		for ( int nu = 0; nu < nu_len; nu++ ){
			for ( int g = 0; g < g_len; g++ ){
				F0(mu, nu) += TMP0AOsmu(g) * AOs(g, nu);
			}
		}
	}
}
