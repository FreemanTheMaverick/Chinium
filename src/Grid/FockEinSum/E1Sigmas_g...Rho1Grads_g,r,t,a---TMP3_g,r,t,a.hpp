/*
Generated by EigenEinSum

Recommended filename:
E1Sigmas_g...Rho1Grads_g,r,t,a---TMP3_g,r,t,a.hpp

Einsum expression:
E1Sigmas(g), Rho1Grads(g, r, t, a) -> TMP3(g, r, t, a)

The einsum expression is decomposed into:
E1Sigmas(g), Rho1Grads(g, r, t, a) -> TMP3(g, r, t, a)

The index paths are derived to be:
TOP
└── a
    └── t
        └── r
            └── g
*/
{
	[[maybe_unused]] const int g_len = E1Sigmas.dimension(0);
	assert( g_len == Rho1Grads.dimension(0) );
	assert( g_len == TMP3.dimension(0) );
	[[maybe_unused]] const int r_len = Rho1Grads.dimension(1);
	assert( r_len == TMP3.dimension(1) );
	[[maybe_unused]] const int t_len = Rho1Grads.dimension(2);
	assert( t_len == TMP3.dimension(2) );
	[[maybe_unused]] const int a_len = Rho1Grads.dimension(3);
	assert( a_len == TMP3.dimension(3) );
	for ( int a = 0; a < a_len; a++ ){
		for ( int t = 0; t < t_len; t++ ){
			for ( int r = 0; r < r_len; r++ ){
				for ( int g = 0; g < g_len; g++ ){
					TMP3(g, r, t, a) += E1Sigmas(g) * Rho1Grads(g, r, t, a);
				}
			}
		}
	}
}
